name: Deploy Application

on:
  workflow_dispatch:  # Allows manual trigger of the workflow

jobs:
  # Job 1: Checkout Code
  checkout:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

  # Job 2: Create AWS Resources (e.g., ECR repositories) using Terraform
  create-aws-resources:
    runs-on: ubuntu-latest
    needs: checkout  # This job depends on the checkout job
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      # Set up Terraform
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1

      # Configure AWS credentials for Terraform
      - name: Configure AWS credentials for Terraform
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      # Initialize Terraform
      - name: Terraform Init
        run: terraform init
        working-directory: terraform  # Ensure Terraform runs from the correct directory

      # Run Terraform plan
      - name: Terraform Plan
        run: terraform plan -var-file=terraform/env/dev/dev.tfvars
        working-directory: terraform  # Ensure Terraform runs from the correct directory

      # Apply Terraform to create resources (e.g., ECR repositories)
      - name: Terraform Apply
        run: terraform apply -var-file=terraform/env/dev/dev.tfvars -auto-approve
        working-directory: terraform  # Ensure Terraform runs from the correct directory

  # Job 3: Build and Push Docker Images to ECR
  build-docker:
    runs-on: ubuntu-latest
    needs: create-aws-resources  # This job depends on the create-aws-resources job
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      # Set up Docker Buildx for multi-platform builds
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Log in to Amazon ECR
      - name: Log in to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1
        with:
          region: ${{ secrets.AWS_REGION }}  # Pass AWS region here

      # Build and push patient-service Docker image
      - name: Build and Push patient-service Docker image
        run: |
          docker build -t ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/patient-service:latest -f app/patient-service/Dockerfile .
          docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/patient-service:latest

      # Build and push appointment-service Docker image
      - name: Build and Push appointment-service Docker image
        run: |
          docker build -t ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/appointment-service:latest -f app/appointment-service/Dockerfile .
          docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/appointment-service:latest
